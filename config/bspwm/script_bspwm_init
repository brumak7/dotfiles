#!/bin/bash

#monitor_count=$(bspc query -M | wc -l)
monitor_count=$(xrandr -q | grep ' connected' | wc -l)

# These should be applied if only one monitor is available.  This always
# applies to my desktop computer.  It also is true for my laptop on
# occasions where no external monitor is connected.
bspwm_generic_workspaces() {
	# all workspaces on the primary monitor
		echo "generic script"
	bspc monitor -d 1 2 3 4 5 6 7 8 9 0
}

# These apply to my laptop when an external monitor is connected.
bspwm_laptop_dual_monitor() {
	# run the script that adds the appropriate `xrandr` settings

	echo "dual monit script"
	notify-send "dual monit script"

	my_laptop_external_monitor=$(xrandr --query | grep 'HDMI1')
	if [[ $my_laptop_external_monitor = *connected* ]]; then
		echo "xrandr output"
		xrandr --output eDP1 --primary --mode 1920x1080 --rotate normal --output HDMI1 --mode 1920x1080 --rotate normal --right-of eDP1
	fi

	# set the workspaces per monitor
	bspc monitor eDP1 -d 1 2 3
	bspc monitor HDMI1 -d 4 5 6 7 8 9 0

	# Add padding to fix issue where there is an overlap between panel
	# and windows in LVDS1.  The panel gets covered by the windows.
	# bspc config top_padding 18
}

# Run commands depending on the host computer.
# Is an external monitor connected to my laptop?
if [[ "$monitor_count" == 2 ]]; then
	echo "Monitor count is equal to 2"
	notify-send "Monitor count is equal to 2"

	echo "Defining per-monitor workspaces"
	notify-send "Defining per-monitor workspaces"
	bspwm_laptop_dual_monitor
else
	echo "Monitor count is equal to 1"
	notify-send "Monitor count is equal to 1"

	echo "Defining per-monitor workspaces"
	bspwm_generic_workspaces
fi

# vi:foldmethod=marker

